import cv2
import matplotlib.pyplot as plt

def load_image(image_path):
    # Read the image
    img = cv2.imread(image_path)
    # Convert the image from BGR to RGB
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    return img_rgb

def detect_faces(image):
    # Convert the image to grayscale for face detection
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    # Load the pre-trained face detection model
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
    # Detect faces
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))
    return faces

def visualize_faces(image, faces):
    # Draw rectangles around the faces
    for (x, y, w, h) in faces:
        cv2.rectangle(image, (x, y), (x+w, y+h), (0, 255, 0), 2)
    # Display the image with detected faces
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
    plt.axis('off')
    plt.show()

# Set the path to the image
image_path = 'strawhats.jpg'
# Load the image
image = load_image(image_path)
# Detect faces in the image
faces = detect_faces(image)
# Print the number of faces detected
print(f'Number of faces detected: {len(faces)}')
# Visualize the faces on the image
visualize_faces(image, faces)